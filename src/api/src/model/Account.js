/**
 * BetCoffee API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
// import AnyOf from './AnyOf';

/**
 * The Account model module.
 * @module model/Account
 * @version 0.1.0
 */
class Account {
    /**
     * Constructs a new <code>Account</code>.
     * @alias module:model/Account
     * @param get_methods {Array.<String>} 
     */
    constructor(get_methods) { 
        
        Account.initialize(this, get_methods);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, get_methods) { 
        obj['get_methods'] = get_methods;
    }

    /**
     * Constructs a <code>Account</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Account} obj Optional instance to populate.
     * @return {module:model/Account} The populated <code>Account</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Account();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
            }
            if (data.hasOwnProperty('last_activity')) {
                obj['last_activity'] = ApiClient.convertToType(data['last_activity'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            // if (data.hasOwnProperty('interfaces')) {
            //     obj['interfaces'] = ApiClient.convertToType(data['interfaces'], AnyOf);
            // }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('is_scam')) {
                obj['is_scam'] = ApiClient.convertToType(data['is_scam'], 'Boolean');
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = ApiClient.convertToType(data['icon'], 'String');
            }
            if (data.hasOwnProperty('memo_required')) {
                obj['memo_required'] = ApiClient.convertToType(data['memo_required'], 'Boolean');
            }
            if (data.hasOwnProperty('get_methods')) {
                obj['get_methods'] = ApiClient.convertToType(data['get_methods'], ['String']);
            }
            if (data.hasOwnProperty('is_suspended')) {
                obj['is_suspended'] = ApiClient.convertToType(data['is_suspended'], 'Boolean');
            }
            if (data.hasOwnProperty('is_wallet')) {
                obj['is_wallet'] = ApiClient.convertToType(data['is_wallet'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Account</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Account</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Account.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `interfaces`
        // if (data['interfaces']) { // data not null
        //   AnyOf.validateJSON(data['interfaces']);
        // }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['icon'] && !(typeof data['icon'] === 'string' || data['icon'] instanceof String)) {
            throw new Error("Expected the field `icon` to be a primitive type in the JSON string but got " + data['icon']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['get_methods'])) {
            throw new Error("Expected the field `get_methods` to be an array in the JSON data but got " + data['get_methods']);
        }

        return true;
    }


}

Account.RequiredProperties = ["get_methods"];

/**
 * @member {String} address
 */
Account.prototype['address'] = undefined;

/**
 * @member {Number} balance
 */
Account.prototype['balance'] = undefined;

/**
 * @member {Number} last_activity
 */
Account.prototype['last_activity'] = undefined;

/**
 * @member {String} status
 */
Account.prototype['status'] = undefined;

/**
 // * @member {module:model/AnyOf} interfaces
 */
Account.prototype['interfaces'] = undefined;

/**
 * @member {String} name
 */
Account.prototype['name'] = undefined;

/**
 * @member {Boolean} is_scam
 */
Account.prototype['is_scam'] = undefined;

/**
 * @member {String} icon
 */
Account.prototype['icon'] = undefined;

/**
 * @member {Boolean} memo_required
 */
Account.prototype['memo_required'] = undefined;

/**
 * @member {Array.<String>} get_methods
 */
Account.prototype['get_methods'] = undefined;

/**
 * @member {Boolean} is_suspended
 */
Account.prototype['is_suspended'] = undefined;

/**
 * @member {Boolean} is_wallet
 */
Account.prototype['is_wallet'] = undefined;






export default Account;

