/**
 * BetCoffee API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserRead from './UserRead';

/**
 * The SportRatedLeagueEntryRead model module.
 * @module model/SportRatedLeagueEntryRead
 * @version 0.1.0
 */
class SportRatedLeagueEntryRead {
    /**
     * Constructs a new <code>SportRatedLeagueEntryRead</code>.
     * @alias module:model/SportRatedLeagueEntryRead
     * @param user {module:model/UserRead} 
     * @param score {Number} 
     * @param place {Number} 
     */
    constructor(user, score, place) { 
        
        SportRatedLeagueEntryRead.initialize(this, user, score, place);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, user, score, place) { 
        obj['user'] = user;
        obj['score'] = score;
        obj['place'] = place;
    }

    /**
     * Constructs a <code>SportRatedLeagueEntryRead</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SportRatedLeagueEntryRead} obj Optional instance to populate.
     * @return {module:model/SportRatedLeagueEntryRead} The populated <code>SportRatedLeagueEntryRead</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SportRatedLeagueEntryRead();

            if (data.hasOwnProperty('user')) {
                obj['user'] = UserRead.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('place')) {
                obj['place'] = ApiClient.convertToType(data['place'], 'Number');
            }
            if (data.hasOwnProperty('previous_place')) {
                obj['previous_place'] = ApiClient.convertToType(data['previous_place'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SportRatedLeagueEntryRead</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SportRatedLeagueEntryRead</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SportRatedLeagueEntryRead.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          UserRead.validateJSON(data['user']);
        }

        return true;
    }


}

SportRatedLeagueEntryRead.RequiredProperties = ["user", "score", "place"];

/**
 * @member {module:model/UserRead} user
 */
SportRatedLeagueEntryRead.prototype['user'] = undefined;

/**
 * @member {Number} score
 */
SportRatedLeagueEntryRead.prototype['score'] = undefined;

/**
 * @member {Number} place
 */
SportRatedLeagueEntryRead.prototype['place'] = undefined;

/**
 * @member {Number} previous_place
 */
SportRatedLeagueEntryRead.prototype['previous_place'] = undefined;






export default SportRatedLeagueEntryRead;

